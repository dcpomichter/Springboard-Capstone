{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/GitHub/Springboard-Capstone/src/dbConfig/dbConfig.ts"],"sourcesContent":["import mongoose from 'mongoose'\r\n\r\nexport async function connect() {\r\n    try {\r\n        mongoose.connect(process.env.MONGO_URI!)\r\n        const connection = mongoose.connection\r\n\r\n        connection.on('connected', () => {\r\n            console.log('MongoDB Connected successfully')\r\n        })\r\n\r\n        connection.on('error', (err) => {\r\n            console.log('MongoDB connection error. Please make sure MongoDB is running ' + err)\r\n            process.exit();\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log('Something went wrong!')\r\n        console.log(err)\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IAClB,IAAI;QACA,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QACtC,MAAM,aAAa,oHAAQ,CAAC,UAAU;QAEtC,WAAW,EAAE,CAAC,aAAa;YACvB,QAAQ,GAAG,CAAC;QAChB;QAEA,WAAW,EAAE,CAAC,SAAS,CAAC;YACpB,QAAQ,GAAG,CAAC,mEAAmE;YAC/E,QAAQ,IAAI;QAChB;IACJ,EACA,OAAO,KAAK;QACR,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;IAChB;AACJ","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/GitHub/Springboard-Capstone/src/models/gameModel.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst gameSchema = new mongoose.Schema({\r\n    title: {\r\n        type: String,\r\n        required: [true, \"Please provide a game title\"],\r\n        unique: true\r\n    },\r\n    category: {\r\n        type: String,\r\n        required: [true, \"Please provide a game category\"]\r\n    },\r\n    numberOfPlayers: {\r\n        type: Number,\r\n        required: [true, \"Please provide a number of players\"]\r\n    },\r\n    gameplayTime: {\r\n        type: Number,\r\n        required: [true, \"Please include the gameplay time\"]\r\n    },\r\n    publisher: {\r\n        type: String,\r\n    },\r\n    owners: [\r\n        {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: 'User'\r\n        }\r\n    ],\r\n    reviews: [\r\n        {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: 'Review'\r\n        }\r\n    ]\r\n})\r\n\r\nconst Game = mongoose.models.Game || mongoose.model(\"Game\", gameSchema)\r\n\r\nexport default Game\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACnC,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA8B;QAC/C,QAAQ;IACZ;IACA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAAiC;IACtD;IACA,iBAAiB;QACb,MAAM;QACN,UAAU;YAAC;YAAM;SAAqC;IAC1D;IACA,cAAc;QACV,MAAM;QACN,UAAU;YAAC;YAAM;SAAmC;IACxD;IACA,WAAW;QACP,MAAM;IACV;IACA,QAAQ;QACJ;YACI,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACT;KACH;IACD,SAAS;QACL;YACI,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACT;KACH;AACL;AAEA,MAAM,OAAO,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/GitHub/Springboard-Capstone/src/models/userModel.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please provide a Username\"],\r\n        unique: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"]\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"],\r\n        unique: true\r\n    },\r\n    isVerified: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    isAdmin: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    library: [\r\n        {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: 'Game'\r\n        }\r\n    ],\r\n    reviews: [\r\n        {\r\n            type: mongoose.Schema.Types.ObjectId,\r\n            ref: 'Review'\r\n        }\r\n    ],\r\n    forgotPasswordToken: String,\r\n    forgotPasswordTokenExpiry: Date,\r\n    verifyToken: String,\r\n    verifyTokenExpiry: Date\r\n})\r\n\r\nconst User = mongoose.models.User || mongoose.model(\"User\", userSchema)\r\n\r\nexport default User\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACnC,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;IACZ;IACA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;IAC/C;IACA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,QAAQ;IACZ;IACA,YAAY;QACR,MAAM;QACN,SAAS;IACb;IACA,SAAS;QACL,MAAM;QACN,SAAS;IACb;IACA,SAAS;QACL;YACI,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACT;KACH;IACD,SAAS;QACL;YACI,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACT;KACH;IACD,qBAAqB;IACrB,2BAA2B;IAC3B,aAAa;IACb,mBAAmB;AACvB;AAEA,MAAM,OAAO,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/GitHub/Springboard-Capstone/src/models/reviewModel.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst reviewSchema = new mongoose.Schema({\r\n    title: {\r\n        type: String,\r\n        required: [true, \"Please provide a game title\"]\r\n    },\r\n    description: {\r\n        type: String,\r\n        required: [true, \"Please provide a description\"]\r\n    },\r\n    rating: {\r\n        type: Number,\r\n        required: [true, \"Please provide a rating\"]\r\n    },\r\n    reviewer: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'User'\r\n    },\r\n    game: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Game'\r\n    }\r\n})\r\n\r\nconst Review = mongoose.models.Review || mongoose.model(\"Review\", reviewSchema)\r\n\r\nexport default Review\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,eAAe,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA8B;IACnD;IACA,aAAa;QACT,MAAM;QACN,UAAU;YAAC;YAAM;SAA+B;IACpD;IACA,QAAQ;QACJ,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;IAC/C;IACA,UAAU;QACN,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACT;IACA,MAAM;QACF,MAAM,oHAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,KAAK;IACT;AACJ;AAEA,MAAM,SAAS,oHAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,oHAAQ,CAAC,KAAK,CAAC,UAAU;uCAEnD","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/GitHub/Springboard-Capstone/src/app/api/reviews/%5BreviewId%5D/route.ts"],"sourcesContent":["import { connect } from \"@/dbConfig/dbConfig\";\r\nimport Game from \"@/models/gameModel\";\r\nimport User from \"@/models/userModel\";\r\nimport Review from \"@/models/reviewModel\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport toast from \"react-hot-toast\";\r\n\r\n\r\nconnect()\r\n\r\n\r\nexport async function POST(request: NextRequest) {\r\n    try {\r\n        const reqBody = await request.json()\r\n\r\n        const { reviewId } = reqBody\r\n        let review = await Review.findById(reviewId)\r\n\r\n        if (!review) {\r\n            return NextResponse.json({ error: \"Review does not exist\" }, { status: 400 })\r\n        }\r\n\r\n        const user = await User.findById(review.reviewer)\r\n        const game = await Game.findById(review.game)\r\n\r\n        review._doc.reviewer = user.username\r\n        review._doc.game = game.title\r\n\r\n\r\n        return NextResponse.json({\r\n            message: \"Review Found\",\r\n            review: review._doc\r\n        })\r\n    }\r\n    catch (error: any) {\r\n        return NextResponse.json({ error: error.message }, { status: 400 })\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAIA,IAAA,wIAAO;AAGA,eAAe,KAAK,OAAoB;IAC3C,IAAI;QACA,MAAM,UAAU,MAAM,QAAQ,IAAI;QAElC,MAAM,EAAE,QAAQ,EAAE,GAAG;QACrB,IAAI,SAAS,MAAM,yIAAM,CAAC,QAAQ,CAAC;QAEnC,IAAI,CAAC,QAAQ;YACT,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC/E;QAEA,MAAM,OAAO,MAAM,uIAAI,CAAC,QAAQ,CAAC,OAAO,QAAQ;QAChD,MAAM,OAAO,MAAM,uIAAI,CAAC,QAAQ,CAAC,OAAO,IAAI;QAE5C,OAAO,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ;QACpC,OAAO,IAAI,CAAC,IAAI,GAAG,KAAK,KAAK;QAG7B,OAAO,gJAAY,CAAC,IAAI,CAAC;YACrB,SAAS;YACT,QAAQ,OAAO,IAAI;QACvB;IACJ,EACA,OAAO,OAAY;QACf,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACrE;AACJ","debugId":null}}]
}