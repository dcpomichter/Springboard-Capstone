{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/dbConfig/dbConfig.ts"],"sourcesContent":["import mongoose from 'mongoose'\r\n\r\nexport async function connect() {\r\n    try {\r\n        mongoose.connect(process.env.MONGO_URI!)\r\n        const connection = mongoose.connection\r\n\r\n        connection.on('connected', () => {\r\n            console.log('MongoDB Connected successfully')\r\n        })\r\n\r\n        connection.on('error', (err) => {\r\n            console.log('MongoDB connection error. Please make sure MongoDB is running ' + err)\r\n            process.exit();\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log('Something went wrong!')\r\n        console.log(err)\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IAClB,IAAI;QACA,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QACtC,MAAM,aAAa,oHAAQ,CAAC,UAAU;QAEtC,WAAW,EAAE,CAAC,aAAa;YACvB,QAAQ,GAAG,CAAC;QAChB;QAEA,WAAW,EAAE,CAAC,SAAS,CAAC;YACpB,QAAQ,GAAG,CAAC,mEAAmE;YAC/E,QAAQ,IAAI;QAChB;IACJ,EACA,OAAO,KAAK;QACR,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;IAChB;AACJ","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/models/userModel.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please provide a Username\"],\r\n        unique: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"]\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"],\r\n        unique: true\r\n    },\r\n    isVerified: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    isAdmin: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    forgotPasswordToken: String,\r\n    forgotPasswordTokenExpiry: Date,\r\n    verifyToken: String,\r\n    verifyTokenExpiry: Date\r\n})\r\n\r\nconst User = mongoose.models.users || mongoose.model(\"users\", userSchema)\r\n\r\nexport default User\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACnC,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;IACZ;IACA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;IAC/C;IACA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,QAAQ;IACZ;IACA,YAAY;QACR,MAAM;QACN,SAAS;IACb;IACA,SAAS;QACL,MAAM;QACN,SAAS;IACb;IACA,qBAAqB;IACrB,2BAA2B;IAC3B,aAAa;IACb,mBAAmB;AACvB;AAEA,MAAM,OAAO,oHAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,oHAAQ,CAAC,KAAK,CAAC,SAAS;uCAE/C","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/helpers/mailer.ts"],"sourcesContent":["import nodemailer from 'nodemailer';\r\nimport User from '@/models/userModel';\r\nimport bcrypt from 'bcryptjs';\r\n\r\nexport const sendEmail = async ({ email, emailType, userId }: any) => {\r\n    try {\r\n        const hashedToken = await bcrypt.hash(userId.toString(), 10)\r\n\r\n        if (emailType === 'VERIFY') {\r\n            await User.findByIdAndUpdate(userId, {\r\n                verifyToken: hashedToken,\r\n                verifyTokenExpiry: Date.now() + 3600000\r\n            }, { new: true, runValidators: true })\r\n        } else if (emailType === 'RESET') {\r\n            await User.findByIdAndUpdate(userId, {\r\n                forgotPasswordToken: hashedToken,\r\n                forgotPasswordTokenExpiry: Date.now() + 3600000\r\n            }, { new: true, runValidators: true })\r\n        }\r\n\r\n        // Looking to send emails in production? Check out our Email API/SMTP product!\r\n        const transport = nodemailer.createTransport({\r\n            host: \"sandbox.smtp.mailtrap.io\",\r\n            port: 2525,\r\n            auth: {\r\n                user: \"951a544f073f95\",\r\n                pass: \"7eacd0c8902c1d\"\r\n                //ADD these Credentials to .env file\r\n            }\r\n        });\r\n\r\n        const mailOptions = {\r\n            from: \"admin@boardbums.com\",\r\n            to: email,\r\n            subject: emailType === \"VERIFY\" ? \"Verify your Email\" : \"Reset your Password\",\r\n            html: `<p>Click <a href=\"${process.env.DOMAIN}/verifyemail?token=${hashedToken}\">here</a> to ${emailType === \"VERIFY\" ? \"Verify your Email\" : \"Reset your Password\"} or copy and paste the link below into your browser. <br> ${process.env.DOMAIN}/verifyemail?token=${hashedToken}</p>`\r\n        }\r\n\r\n        const mailResponse = await transport.sendMail(mailOptions)\r\n\r\n        return mailResponse\r\n\r\n    }\r\n    catch (error: any) {\r\n        throw new Error(error.message)\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,YAAY,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAO;IAC7D,IAAI;QACA,MAAM,cAAc,MAAM,8IAAM,CAAC,IAAI,CAAC,OAAO,QAAQ,IAAI;QAEzD,IAAI,cAAc,UAAU;YACxB,MAAM,8JAAI,CAAC,iBAAiB,CAAC,QAAQ;gBACjC,aAAa;gBACb,mBAAmB,KAAK,GAAG,KAAK;YACpC,GAAG;gBAAE,KAAK;gBAAM,eAAe;YAAK;QACxC,OAAO,IAAI,cAAc,SAAS;YAC9B,MAAM,8JAAI,CAAC,iBAAiB,CAAC,QAAQ;gBACjC,qBAAqB;gBACrB,2BAA2B,KAAK,GAAG,KAAK;YAC5C,GAAG;gBAAE,KAAK;gBAAM,eAAe;YAAK;QACxC;QAEA,8EAA8E;QAC9E,MAAM,YAAY,4JAAU,CAAC,eAAe,CAAC;YACzC,MAAM;YACN,MAAM;YACN,MAAM;gBACF,MAAM;gBACN,MAAM;YAEV;QACJ;QAEA,MAAM,cAAc;YAChB,MAAM;YACN,IAAI;YACJ,SAAS,cAAc,WAAW,sBAAsB;YACxD,MAAM,CAAC,kBAAkB,EAAE,QAAQ,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,YAAY,cAAc,EAAE,cAAc,WAAW,sBAAsB,sBAAsB,0DAA0D,EAAE,QAAQ,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,YAAY,IAAI,CAAC;QAC7R;QAEA,MAAM,eAAe,MAAM,UAAU,QAAQ,CAAC;QAE9C,OAAO;IAEX,EACA,OAAO,OAAY;QACf,MAAM,IAAI,MAAM,MAAM,OAAO;IACjC;AACJ","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/app/api/users/signup/route.ts"],"sourcesContent":["import { connect } from \"@/dbConfig/dbConfig\";\r\nimport User from \"@/models/userModel\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { sendEmail } from \"@/helpers/mailer\";\r\n\r\nconnect()\r\n\r\n\r\nexport async function POST(request: NextRequest) {\r\n    try {\r\n        const reqBody = await request.json()\r\n        const { username, email, password } = reqBody\r\n\r\n        //verify if user exists\r\n        const user = await User.findOne({ email })\r\n        if (user) {\r\n            return NextResponse.json({ error: \"User already exists\" }, { status: 400 })\r\n        }\r\n\r\n        //hash password\r\n        const salt = await bcrypt.genSalt(10)\r\n        const hashedPassword = await bcrypt.hash(password, salt)\r\n\r\n        const newUser = new User({\r\n            username,\r\n            email,\r\n            password: hashedPassword\r\n        })\r\n\r\n        const savedUser = await newUser.save()\r\n\r\n        await sendEmail({email, emailType: \"VERIFY\", userId: savedUser._id})\r\n\r\n        return NextResponse.json({\r\n            message: \"User created successfully\",\r\n            success: true,\r\n            savedUser\r\n        })\r\n\r\n    }\r\n    catch (error: any) {\r\n        return NextResponse.json({ error: error.message }, { status: 500 })\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,IAAA,+JAAO;AAGA,eAAe,KAAK,OAAoB;IAC3C,IAAI;QACA,MAAM,UAAU,MAAM,QAAQ,IAAI;QAClC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAEtC,uBAAuB;QACvB,MAAM,OAAO,MAAM,8JAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QACxC,IAAI,MAAM;YACN,OAAO,uKAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,eAAe;QACf,MAAM,OAAO,MAAM,8IAAM,CAAC,OAAO,CAAC;QAClC,MAAM,iBAAiB,MAAM,8IAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,MAAM,UAAU,IAAI,8JAAI,CAAC;YACrB;YACA;YACA,UAAU;QACd;QAEA,MAAM,YAAY,MAAM,QAAQ,IAAI;QAEpC,MAAM,IAAA,8JAAS,EAAC;YAAC;YAAO,WAAW;YAAU,QAAQ,UAAU,GAAG;QAAA;QAElE,OAAO,uKAAY,CAAC,IAAI,CAAC;YACrB,SAAS;YACT,SAAS;YACT;QACJ;IAEJ,EACA,OAAO,OAAY;QACf,OAAO,uKAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACrE;AACJ","debugId":null}}]
}