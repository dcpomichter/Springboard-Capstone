{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/helpers/getDataFromToken.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { request } from \"http\";\r\n\r\n\r\nexport const getDataFromToken = (request: NextRequest) => {\r\n    try {\r\n        const token = request.cookies.get(\"token\")?.value || ''\r\n        const decodedToken = jwt.verify(token, process.env.TOKEN_SECRET!)\r\n        return decodedToken.id\r\n    }\r\n    catch (error: any) {\r\n        throw new Error(error.message)\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;AAIO,MAAM,mBAAmB,CAAC;IAC7B,IAAI;QACA,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,SAAS;QACrD,MAAM,eAAe,kJAAG,CAAC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAC,YAAY;QAC/D,OAAO,aAAa,EAAE;IAC1B,EACA,OAAO,OAAY;QACf,MAAM,IAAI,MAAM,MAAM,OAAO;IACjC;AACJ","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/models/userModel.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    username: {\r\n        type: String,\r\n        required: [true, \"Please provide a Username\"],\r\n        unique: true\r\n    },\r\n    password: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"]\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: [true, \"Please provide an email\"],\r\n        unique: true\r\n    },\r\n    isVerified: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    isAdmin: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    forgotPasswordToken: String,\r\n    forgotPasswordTokenExpiry: Date,\r\n    verifyToken: String,\r\n    verifyTokenExpiry: Date\r\n})\r\n\r\nconst User = mongoose.models.users || mongoose.model(\"users\", userSchema)\r\n\r\nexport default User\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACnC,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA4B;QAC7C,QAAQ;IACZ;IACA,UAAU;QACN,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;IAC/C;IACA,OAAO;QACH,MAAM;QACN,UAAU;YAAC;YAAM;SAA0B;QAC3C,QAAQ;IACZ;IACA,YAAY;QACR,MAAM;QACN,SAAS;IACb;IACA,SAAS;QACL,MAAM;QACN,SAAS;IACb;IACA,qBAAqB;IACrB,2BAA2B;IAC3B,aAAa;IACb,mBAAmB;AACvB;AAEA,MAAM,OAAO,oHAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,oHAAQ,CAAC,KAAK,CAAC,SAAS;uCAE/C","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/dbConfig/dbConfig.ts"],"sourcesContent":["import mongoose from 'mongoose'\r\n\r\nexport async function connect() {\r\n    try {\r\n        mongoose.connect(process.env.MONGO_URI!)\r\n        const connection = mongoose.connection\r\n\r\n        connection.on('connected', () => {\r\n            console.log('MongoDB Connected successfully')\r\n        })\r\n\r\n        connection.on('error', (err) => {\r\n            console.log('MongoDB connection error. Please make sure MongoDB is running ' + err)\r\n            process.exit();\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log('Something went wrong!')\r\n        console.log(err)\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IAClB,IAAI;QACA,oHAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QACtC,MAAM,aAAa,oHAAQ,CAAC,UAAU;QAEtC,WAAW,EAAE,CAAC,aAAa;YACvB,QAAQ,GAAG,CAAC;QAChB;QAEA,WAAW,EAAE,CAAC,SAAS,CAAC;YACpB,QAAQ,GAAG,CAAC,mEAAmE;YAC/E,QAAQ,IAAI;QAChB;IACJ,EACA,OAAO,KAAK;QACR,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;IAChB;AACJ","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kpape/OneDrive/Documents/Kim%20and%20Dyl/Dylan/Coding/Notes/NextJs/my-app/src/app/api/users/me/route.ts"],"sourcesContent":["import { getDataFromToken } from \"@/helpers/getDataFromToken\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport User from \"@/models/userModel\"\r\nimport { connect } from \"@/dbConfig/dbConfig\";\r\n\r\nconnect();\r\n\r\nexport async function GET(request: NextRequest) {\r\n    try {\r\n        const userId = await getDataFromToken(request)\r\n        const user = await User.findById(userId).select(\"-password\")\r\n        return NextResponse.json({\r\n            message: \"User Found\",\r\n            data: user\r\n        })\r\n    }\r\n    catch (error: any) {\r\n        return NextResponse.json({ error: error.message }, {status: 400})\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,IAAA,+JAAO;AAEA,eAAe,IAAI,OAAoB;IAC1C,IAAI;QACA,MAAM,SAAS,MAAM,IAAA,+KAAgB,EAAC;QACtC,MAAM,OAAO,MAAM,8JAAI,CAAC,QAAQ,CAAC,QAAQ,MAAM,CAAC;QAChD,OAAO,uKAAY,CAAC,IAAI,CAAC;YACrB,SAAS;YACT,MAAM;QACV;IACJ,EACA,OAAO,OAAY;QACf,OAAO,uKAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAC,QAAQ;QAAG;IACnE;AACJ","debugId":null}}]
}